[{"/Users/khan/Sites/antd-create-react-app/src/App.js":"1","/Users/khan/Sites/antd-create-react-app/src/UserInfo.js":"2"},{"size":11934,"mtime":1611284269444,"results":"3","hashOfConfig":"4"},{"size":3825,"mtime":1611284112219,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"8"},"19ewvqv",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/khan/Sites/antd-create-react-app/src/App.js",["11","12","13","14"],"import React from \"react\";\n\nimport \"firebase/auth\";\n\nimport { Layout, Form, Input, Button, Row, Col, Divider, Alert } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nimport \"./App.css\";\n\nimport Avatar from \"./Avatar\";\nimport UserInfo from \"./UserInfo\";\nimport firebase from \"./firebase\";\nimport mainConfigData from \"./config/main.json\";\n\nconst { Header, Footer, Content } = Layout;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAvatarChange = this.handleAvatarChange.bind(this);\n    this.onFinishFailed = this.onFinishFailed.bind(this);\n    this.onFinish = this.onFinish.bind(this);\n\n    this.state = {\n      avatars: [],\n      authenticated: false,\n      messages: [],\n      isDataPersisted: false,\n      currentUser: undefined,\n    };\n  }\n\n  handleAvatarChange(avatars) {\n    this.setState({ avatars });\n  }\n  onFinishFailed(errorInfo: any) {\n    console.error(\"Failed:\", errorInfo);\n  }\n\n  onFinish(values: any) {\n    console.log(\"Received values of form: \", values);\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(values.email, values.password)\n      .then((userCredential) => {\n        console.log(111, userCredential);\n        // Signed in\n        this.setState((state) => ({\n          authenticated: true,\n        }));\n        this.setState((state) => ({\n          messages: [\n            ...state.messages,\n            { message: \"Signed in\", type: \"success\" },\n          ],\n        }));\n\n        userCredential.user\n          .updateProfile({\n            displayName: values.displayName,\n            photoURL: this.state.avatars.length\n              ? this.state.avatars[this.state.avatars.length - 1]\n              : null,\n          })\n          .then(() => {\n            // Update successful.\n            this.setState({ isDataPersisted: true });\n            this.setCurrentUser();\n\n            this.setState((state) => ({\n              messages: [\n                ...state.messages,\n                { message: \"Profile Updated\", type: \"success\" },\n              ],\n            }));\n          })\n          .catch((error) => {\n            // An error happened.\n            console.error(error);\n            this.setState({ isDataPersisted: true });\n            this.setCurrentUser();\n            this.setState((state) => ({\n              messages: [\n                ...state.messages,\n                {\n                  message: error.message\n                    ? error.message\n                    : \"An error happened during profile update\",\n                  type: \"error\",\n                },\n              ],\n            }));\n          });\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState((state) => ({\n          messages: [\n            ...state.messages,\n            {\n              message: error.message\n                ? error.message\n                : \"An error happened during user registration\",\n              type: \"error\",\n            },\n          ],\n        }));\n      });\n  }\n\n  setCurrentUser() {\n    const currentUser = firebase.auth().currentUser;\n    this.setState({ currentUser });\n\n    // var name, email, photoUrl, uid, emailVerified;\n\n    // if (user != null) {\n    //   name = user.displayName;\n    //   email = user.email;\n    //   photoUrl = user.photoURL;\n    //   emailVerified = user.emailVerified;\n    //   uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    //   // this value to authenticate with your backend server, if\n    //   // you have one. Use User.getToken() instead.\n    // }\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 10 },\n    };\n\n    // {message: \"...\", type: \"success|info|warning|error\"}\n\n    const messages = this.state.messages.map((message, index) => (\n      <Alert\n        key={index.toString()}\n        message={message.message}\n        type={message.type}\n      />\n    ));\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Header className=\"App-header\">\n            <a\n              href={mainConfigData.homepage}\n              target=\"_blank\"\n              className=\"App-link\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                alt=\"pixelplicity\"\n                className=\"App-logo swing\"\n                src={mainConfigData.logo}\n              />\n              <span className=\"layout-title\">{mainConfigData.title}</span>\n            </a>\n          </Header>\n          <Divider />\n          <Content>\n            <Row>\n              <Col span={9} offset={9}>\n                {messages}\n                <Divider />\n                {this.state.authenticated ? (\n                  <UserInfo currentUser={this.state.currentUser} />\n                ) : (\n                  <Form\n                    name=\"validate_other\"\n                    {...formItemLayout}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                    initialValues={{\n                      [\"email\"]: \"itsazzad@gmail.com\",\n                      [\"password\"]: \"111111\",\n                      [\"confirmPassword\"]: \"111111\",\n                      [\"displayName\"]: \"Sazzad\",\n                    }}\n                  >\n                    <Form.Item\n                      name=\"email\"\n                      label=\"Email\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input your email!\",\n                          type: \"email\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        prefix={\n                          <MailOutlined className=\"site-form-item-icon\" />\n                        }\n                        placeholder=\"Email\"\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Password\"\n                      name=\"password\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input your password!\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Input.Password\n                        prefix={\n                          <LockOutlined className=\"site-form-item-icon\" />\n                        }\n                        placeholder=\"Password\"\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Confirm Password\"\n                      name=\"confirmPassword\"\n                      dependencies={[\"password\"]}\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please confirm your password!\",\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(_, value) {\n                            if (!value || getFieldValue(\"password\") === value) {\n                              return Promise.resolve();\n                            }\n                            return Promise.reject(\n                              \"The two passwords that you entered do not match!\"\n                            );\n                          },\n                        }),\n                      ]}\n                    >\n                      <Input.Password\n                        prefix={\n                          <LockOutlined className=\"site-form-item-icon\" />\n                        }\n                        placeholder=\"Password\"\n                      />\n                    </Form.Item>\n                    <Form.Item label=\"Display name\" name=\"displayName\">\n                      <Input\n                        prefix={\n                          <UserOutlined className=\"site-form-item-icon\" />\n                        }\n                        placeholder=\"Display name\"\n                      />\n                    </Form.Item>\n                    <Form.Item label=\"Avatar\">\n                      <React.StrictMode>\n                        <Avatar onAvatarChange={this.handleAvatarChange} />\n                      </React.StrictMode>\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                )}\n              </Col>\n            </Row>\n          </Content>\n          <Footer>\n            <div className=\"footer\">\n              <div className=\"footer-links\">\n                <a\n                  title=\"pixelplicity\"\n                  target=\"_blank\"\n                  href={mainConfigData.homepage}\n                  rel=\"noopener noreferrer\"\n                >\n                  {mainConfigData.title}\n                </a>\n                <a\n                  title=\"github\"\n                  target=\"_blank\"\n                  href={mainConfigData.productURL}\n                  rel=\"noopener noreferrer\"\n                >\n                  <span\n                    role=\"img\"\n                    aria-label=\"github\"\n                    className=\"anticon anticon-github\"\n                  >\n                    <svg\n                      viewBox=\"64 64 896 896\"\n                      focusable=\"false\"\n                      data-icon=\"github\"\n                      width=\"1em\"\n                      height=\"1em\"\n                      fill=\"currentColor\"\n                      aria-hidden=\"true\"\n                    >\n                      <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0138.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"></path>\n                    </svg>\n                  </span>\n                </a>\n              </div>\n              <div className=\"footer-copyright\">\n                Copyright{\" \"}\n                <span\n                  role=\"img\"\n                  aria-label=\"copyright\"\n                  className=\"anticon anticon-copyright\"\n                >\n                  <svg\n                    viewBox=\"64 64 896 896\"\n                    focusable=\"false\"\n                    data-icon=\"copyright\"\n                    width=\"1em\"\n                    height=\"1em\"\n                    fill=\"currentColor\"\n                    aria-hidden=\"true\"\n                  >\n                    <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm5.6-532.7c53 0 89 33.8 93 83.4.3 4.2 3.8 7.4 8 7.4h56.7c2.6 0 4.7-2.1 4.7-4.7 0-86.7-68.4-147.4-162.7-147.4C407.4 290 344 364.2 344 486.8v52.3C344 660.8 407.4 734 517.3 734c94 0 162.7-58.8 162.7-141.4 0-2.6-2.1-4.7-4.7-4.7h-56.8c-4.2 0-7.6 3.2-8 7.3-4.2 46.1-40.1 77.8-93 77.8-65.3 0-102.1-47.9-102.1-133.6v-52.6c.1-87 37-135.5 102.2-135.5z\"></path>\n                  </svg>\n                </span>{\" \"}\n                {new Date().getFullYear()} {mainConfigData.title}\n              </div>\n            </div>\n          </Footer>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/khan/Sites/antd-create-react-app/src/UserInfo.js",[],{"ruleId":"15","severity":1,"message":"16","line":178,"column":23,"nodeType":"17","messageId":"18","endLine":178,"endColumn":54,"fix":"19"},{"ruleId":"15","severity":1,"message":"20","line":179,"column":23,"nodeType":"17","messageId":"18","endLine":179,"endColumn":45,"fix":"21"},{"ruleId":"15","severity":1,"message":"22","line":180,"column":23,"nodeType":"17","messageId":"18","endLine":180,"endColumn":52,"fix":"23"},{"ruleId":"15","severity":1,"message":"24","line":181,"column":23,"nodeType":"17","messageId":"18","endLine":181,"endColumn":48,"fix":"25"},"no-useless-computed-key","Unnecessarily computed property [\"email\"] found.","Property","unnecessarilyComputedProperty",{"range":"26","text":"27"},"Unnecessarily computed property [\"password\"] found.",{"range":"28","text":"29"},"Unnecessarily computed property [\"confirmPassword\"] found.",{"range":"30","text":"31"},"Unnecessarily computed property [\"displayName\"] found.",{"range":"32","text":"33"},[5078,5087],"\"email\"",[5133,5145],"\"password\"",[5179,5198],"\"confirmPassword\"",[5232,5247],"\"displayName\""]